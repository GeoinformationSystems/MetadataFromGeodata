<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2020
  ~ @author: Michael Wagner
  -->

<MD_DatatypeCode codespace="http://standards.iso.org/iso/19115/-3/mex/1.0">
    <entry>
        <code>class</code>
        <definition>descriptor of a set of objects that share the same attributes, operations, methods, relationships, and behaviour</definition>
    </entry>
    <entry>
        <code>codelist</code>
        <definition>flexible enumeration useful for expressing a long list of values, can be extended</definition>
    </entry>
    <entry>
        <code>enumeration</code>
        <definition>data type whose instances form a list of named literal values, not extendable</definition>
    </entry>
    <entry>
        <code>codelistElement</code>
        <definition>permissible value for a codelist or enumeration</definition>
    </entry>
    <entry>
        <code>abstractClass</code>
        <definition>class that cannot be directly instantiated</definition>
    </entry>
    <entry>
        <code>aggregateClass</code>
        <definition>class that is composed of classes it is connected to by an aggregate relationship</definition>
    </entry>
    <entry>
        <code>specifiedClass</code>
        <definition>subclass that may be substituted for its superclass</definition>
    </entry>
    <entry>
        <code>datatypeClass</code>
        <definition>class with few or no operations whose primary purpose is to hold the abstract state of another class for transmittal, storage, encoding or persistent storage</definition>
    </entry>
    <entry>
        <code>interfaceClass</code>
        <definition>named set of operations that characterize the behaviour of an element</definition>
    </entry>
    <entry>
        <code>unionClass</code>
        <definition>class describing a selection of one of the specified types</definition>
    </entry>
    <entry>
        <code>metaClass</code>
        <definition>class whose instances are classes</definition>
    </entry>
    <entry>
        <code>typeClass</code>
        <definition>class used for specification of a domain of instances (objects), together with the operations applicable to the objects. A type may have attributes and associations</definition>
    </entry>
    <entry>
        <code>characterString</code>
        <definition>textual information</definition>
    </entry>
    <entry>
        <code>integer</code>
        <definition>numerical field</definition>
    </entry>
    <entry>
        <code>association</code>
        <definition>semantic relationship between two classes that involves connections among their instances</definition>
    </entry>
</MD_DatatypeCode>